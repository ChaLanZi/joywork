// Code generated by goctl. DO NOT EDIT!
// Source: account.proto

package server

import (
	"context"

	"account/rpc/internal/logic"
	"account/rpc/internal/svc"
	account "account/rpc/pb"
)

type AccountServiceServer struct {
	svcCtx *svc.ServiceContext
}

func NewAccountServiceServer(svcCtx *svc.ServiceContext) *AccountServiceServer {
	return &AccountServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *AccountServiceServer) List(ctx context.Context, in *account.GetAccountListRequest) (*account.AccountList, error) {
	l := logic.NewListLogic(ctx, s.svcCtx)
	return l.List(in)
}

func (s *AccountServiceServer) Get(ctx context.Context, in *account.GetAccountRequest) (*account.Account, error) {
	l := logic.NewGetLogic(ctx, s.svcCtx)
	return l.Get(in)
}

func (s *AccountServiceServer) Create(ctx context.Context, in *account.CreateAccountRequest) (*account.Account, error) {
	l := logic.NewCreateLogic(ctx, s.svcCtx)
	return l.Create(in)
}

func (s *AccountServiceServer) Update(ctx context.Context, in *account.Account) (*account.Account, error) {
	l := logic.NewUpdateLogic(ctx, s.svcCtx)
	return l.Update(in)
}

func (s *AccountServiceServer) UpdatePassword(ctx context.Context, in *account.UpdatePasswordRequest) (*account.AccountEmpty, error) {
	l := logic.NewUpdatePasswordLogic(ctx, s.svcCtx)
	return l.UpdatePassword(in)
}

func (s *AccountServiceServer) RequestPasswordReset(ctx context.Context, in *account.PasswordResetRequest) (*account.AccountEmpty, error) {
	l := logic.NewRequestPasswordResetLogic(ctx, s.svcCtx)
	return l.RequestPasswordReset(in)
}

func (s *AccountServiceServer) RequestEmailChange(ctx context.Context, in *account.EmailChangeRequest) (*account.AccountEmpty, error) {
	l := logic.NewRequestEmailChangeLogic(ctx, s.svcCtx)
	return l.RequestEmailChange(in)
}

func (s *AccountServiceServer) VerifyPassword(ctx context.Context, in *account.VerifyPasswordRequest) (*account.Account, error) {
	l := logic.NewVerifyPasswordLogic(ctx, s.svcCtx)
	return l.VerifyPassword(in)
}

func (s *AccountServiceServer) ChangeEmail(ctx context.Context, in *account.EmailChangeRequest) (*account.AccountEmpty, error) {
	l := logic.NewChangeEmailLogic(ctx, s.svcCtx)
	return l.ChangeEmail(in)
}

func (s *AccountServiceServer) GetOrCreate(ctx context.Context, in *account.GetOrCreateRequest) (*account.Account, error) {
	l := logic.NewGetOrCreateLogic(ctx, s.svcCtx)
	return l.GetOrCreate(in)
}

func (s *AccountServiceServer) GetAccountByPhoneNumber(ctx context.Context, in *account.GetAccountByPhoneNumberRequest) (*account.Account, error) {
	l := logic.NewGetAccountByPhoneNumberLogic(ctx, s.svcCtx)
	return l.GetAccountByPhoneNumber(in)
}

func (s *AccountServiceServer) GetAccountByEmail(ctx context.Context, in *account.GetAccountByEmailRequest) (*account.Account, error) {
	l := logic.NewGetAccountByEmailLogic(ctx, s.svcCtx)
	return l.GetAccountByEmail(in)
}

func (s *AccountServiceServer) TrackEvent(ctx context.Context, in *account.TrackEventRequest) (*account.AccountEmpty, error) {
	l := logic.NewTrackEventLogic(ctx, s.svcCtx)
	return l.TrackEvent(in)
}

func (s *AccountServiceServer) SyncUser(ctx context.Context, in *account.SyncUserRequest) (*account.AccountEmpty, error) {
	l := logic.NewSyncUserLogic(ctx, s.svcCtx)
	return l.SyncUser(in)
}
